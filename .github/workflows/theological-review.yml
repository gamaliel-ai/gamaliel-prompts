name: Theological Guidelines Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  theological-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better diff analysis

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          # Ensure all required dependencies are available
          pip install openai jinja2 requests pyyaml python-dotenv

      - name: Debug environment
        run: |
          echo "Current working directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "CLI package installed:"
          pip list | grep gamaliel || echo "CLI not found in pip list"
          echo "Python path:"
          python -c "import sys; print('\n'.join(sys.path))"

      - name: Test CLI import
        run: |
          echo "Testing CLI imports..."
          python -c "from cli.cli import main; print('CLI imports successfully')" || echo "CLI import failed"
          python -c "from cli.config import Config; print('Config imports successfully')" || echo "Config import failed"

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, compare with base branch
            git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          else
            # For pushes, compare with previous commit
            git diff --name-only HEAD~1...HEAD > changed_files.txt
          fi
          
          # In this repo, just use all changed files
          cp changed_files.txt filtered_files.txt
          
          # Create JSON array of changed files
          echo "changed_files=$(cat filtered_files.txt | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          
          echo "Changed files in gamaliel-prompts:"
          cat filtered_files.txt

      - name: Review theological content
        id: review
        timeout-minutes: 10
        run: |
          # Use the CLI validate command instead of the old script
          echo "Starting theological validation..."
          python -m cli validate . --all
          validation_exit_code=$?
          
          if [ $validation_exit_code -eq 0 ]; then
            echo "✅ Validation completed successfully - no violations found"
          else
            echo "❌ Validation found violations or failed"
            exit $validation_exit_code
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Comment on PR
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ⚠️ Theological Guidelines Violation Detected

            This PR contains changes that violate the mandatory core theological guardrails defined in \`guardrails.md\`.

            **Action Required:** Please review and revise the content to ensure it aligns with the core Christian doctrines and theological guardrails before this PR can be merged.

            ---
            *This review was performed by the Theological Guidelines Review system using the Gamaliel CLI.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Success message
        if: success()
        run: |
          echo "✅ All changes comply with theological guidelines"
          echo "PR is approved from a theological perspective" 